rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // ==============================================
    // HELPER FUNCTIONS
    // ==============================================
    
    // Check if user is authenticated admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.admin == true;
    }
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user owns the resource
    function isOwner(userId) {
      return request.auth != null && 
             request.auth.uid == userId;
    }
    
    // Validate file size (10MB for media, 5MB for documents)
    function isValidImageSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB
    }
    
    function isValidDocumentSize() {
      return request.resource.size < 5 * 1024 * 1024; // 5MB
    }
    
    function isValidVideoSize() {
      return request.resource.size < 50 * 1024 * 1024; // 50MB
    }
    
    // Validate file types
    function isValidImageType() {
      return request.resource.contentType.matches('image/(jpeg|jpg|png|webp|gif)');
    }
    
    function isValidVideoType() {
      return request.resource.contentType.matches('video/(mp4|mov|avi|webm)');
    }
    
    function isValidDocumentType() {
      return request.resource.contentType.matches('(application/pdf|text/plain|application/msword|application/vnd.openxmlformats-officedocument.wordprocessingml.document)');
    }
    
    function isValidAudioType() {
      return request.resource.contentType.matches('audio/(mp3|wav|aac|m4a)');
    }
    
    // Check if filename is safe (prevent directory traversal)
    function hasSafeFilename() {
      return !request.resource.name.matches('.*[/\\\\].*') &&
             !request.resource.name.matches('.*\\.\\..*') &&
             request.resource.name.size() < 255;
    }
    
    // ==============================================
    // EDITOR-RELATED FILES
    // ==============================================
    
    // Editor profile photos - public read, admin write
    match /editors/{editorId}/photos/{photoId} {
      allow read: if true;
      allow write: if isAdmin() && 
                   isValidImageSize() &&
                   isValidImageType() &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Editor portfolios and documents - public read, admin write
    match /editors/{editorId}/documents/{documentId} {
      allow read: if true;
      allow write: if isAdmin() && 
                   isValidDocumentSize() &&
                   isValidDocumentType() &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Editor reels and demo videos - public read, admin write
    match /editors/{editorId}/reels/{reelId} {
      allow read: if true;
      allow write: if isAdmin() && 
                   isValidVideoSize() &&
                   isValidVideoType() &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Editor audio samples and music - public read, admin write
    match /editors/{editorId}/audio/{audioId} {
      allow read: if true;
      allow write: if isAdmin() && 
                   isValidImageSize() && // Use image size limit for audio
                   isValidAudioType() &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Editor thumbnails and previews - public read, admin write
    match /editors/{editorId}/thumbnails/{thumbnailId} {
      allow read: if true;
      allow write: if isAdmin() && 
                   request.resource.size < 2 * 1024 * 1024 && // 2MB for thumbnails
                   isValidImageType() &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // ==============================================
    // RESEARCH & ADMIN FILES
    // ==============================================
    
    // Research documents and notes - admin only
    match /research/{editorId}/{documentId} {
      allow read, write: if isAdmin() && 
                          isValidDocumentSize() &&
                          (isValidDocumentType() || isValidImageType()) &&
                          hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Research attachments and evidence - admin only
    match /research/{editorId}/attachments/{attachmentId} {
      allow read, write: if isAdmin() && 
                          isValidDocumentSize() &&
                          (isValidDocumentType() || isValidImageType() || isValidVideoType()) &&
                          hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Admin uploads and imports - admin only
    match /admin/{category}/{fileId} {
      allow read, write: if isAdmin() && 
                          isValidDocumentSize() &&
                          hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // ==============================================
    // USER FILES
    // ==============================================
    
    // User temporary uploads - authenticated users only
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && 
                          isValidDocumentSize() &&
                          (isValidDocumentType() || isValidImageType()) &&
                          hasSafeFilename();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // User profile uploads - user-specific access
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Public profile images
      allow write: if isOwner(userId) && 
                   isValidImageSize() &&
                   isValidImageType() &&
                   hasSafeFilename();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // User private files - user-specific access only
    match /users/{userId}/private/{fileName} {
      allow read, write: if isOwner(userId) && 
                          isValidDocumentSize() &&
                          (isValidDocumentType() || isValidImageType()) &&
                          hasSafeFilename();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // ==============================================
    // PUBLIC ASSETS
    // ==============================================
    
    // Public assets (logos, icons, etc.) - public read, admin write
    match /public/{fileName} {
      allow read: if true;
      allow write: if isAdmin() && 
                   isValidImageSize() &&
                   (isValidImageType() || isValidDocumentType()) &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // Public media and content - public read, admin write
    match /public/media/{mediaId} {
      allow read: if true;
      allow write: if isAdmin() && 
                   isValidVideoSize() &&
                   (isValidImageType() || isValidVideoType() || isValidAudioType()) &&
                   hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // ==============================================
    // SYSTEM FILES
    // ==============================================
    
    // System backups - admin only
    match /backups/{backupId} {
      allow read, write: if isAdmin() && 
                          request.resource.size < 100 * 1024 * 1024 && // 100MB for backups
                          hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // System logs and exports - admin only
    match /exports/{exportId} {
      allow read, write: if isAdmin() && 
                          isValidDocumentSize() &&
                          hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // ==============================================
    // ANALYTICS & TRACKING
    // ==============================================
    
    // Analytics uploads - admin only
    match /analytics/{fileName} {
      allow read, write: if isAdmin() && 
                          isValidDocumentSize() &&
                          isValidDocumentType() &&
                          hasSafeFilename();
      allow delete: if isAdmin();
    }
    
    // ==============================================
    // SECURITY RESTRICTIONS
    // ==============================================
    
    // Block executable files and scripts
    match /{allPaths=**} {
      allow read, write: if !request.resource.contentType.matches('.*(javascript|typescript|php|python|ruby|perl|bash|sh|exe|bat|cmd|ps1).*');
    }
    
    // ==============================================
    // FALLBACK RULE
    // ==============================================
    
    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 